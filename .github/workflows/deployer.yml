name: PaaS Application Builder

on:
  workflow_dispatch:
    inputs:
      owner:
        description: 'The owner of the user repo'
        required: true
        type: string
      repo:
        description: 'The name of the user repo'
        required: true
        type: string
      railwayServiceId:
        description: 'The ID of the Railway service to update'
        required: true
        type: string
      githubRepoId:
        description: 'The unique ID of the GitHub repository'
        required: true
        type: string

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: 1. Check out User's Code
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.owner }}/${{ inputs.repo }}
          path: ./user-code

      - name: 2. Generate Dockerfile with Buildpack
        run: |
          CODE_PATH="./user-code"
          DOCKERFILE_PATH="./user-code/Dockerfile.generated"
          
          if [ -f "$CODE_PATH/package.json" ]; then
            echo "-> Node.js project detected"
            cat <<EOF > $DOCKERFILE_PATH
          FROM node:18-alpine
          WORKDIR /usr/src/app
          COPY package*.json ./
          RUN npm install --production
          COPY . .
          EXPOSE 3000
          CMD ["npm", "start"]
          EOF
          else
            echo "-> Error: Unknown project type. No package.json found."
            exit 1
          fi

      - name: 3. Set up Railway CLI
        run: |
          curl -fsSL https://railway.app/install.sh | sh
          echo "$HOME/.railway/bin" >> $GITHUB_PATH

      - name: 4. Deploy to Railway using CLI
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_API_TOKEN }}
          SERVICE_ID: ${{ inputs.railwayServiceId }}
        run: |
          echo "Deploying to Railway service: $SERVICE_ID"
          cd ./user-code
          
          # Try to deploy directly to the service
          railway deploy --service "$SERVICE_ID"